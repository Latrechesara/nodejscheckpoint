{"version":3,"sources":["index.js"],"names":["http","require","fs","server","createServer","req","res","writeHead","Content-Type","port","error","data","write","end","listen","console","log"],"mappings":"aAAA,IAAMA,KAAKC,QAAQ,QACbC,GAAGD,QAAQ,MADXD,KAAKC,IACHE,OAACF,KAAQG,aAAjB,SAAAC,EAAAC,GAIIA,EAAIC,UAAU,IAAI,CAACC,eAAe,aAHhCC,GAAAA,SAAN,aAAA,SAAAC,EAAAC,GAEYD,GACWJ,EAAAC,UAAe,KAAlCD,EAAAM,MAAA,yBAIYL,EAAAA,MAAUI,GAFlBL,EAKKO,UAIRV,OAVDW,OAAAL,KAAA,SAAAC,GAFJA,EAgBOI,QAAOL,IAAK,uBAAeC,GAE1BK,QAAYC,IAAA,8BAAZP","file":"index.min.js","sourcesContent":["const http=require('http');\r\nconst fs=require('fs')\r\nconst port =8000\r\n\r\nconst server = http.createServer(function(req,res){\r\n    res.writeHead(200,{'Content-Type':'txt/html'})\r\n    fs.readFile('index.html',function(error,data){\r\n        if (error){\r\n\r\n            res.writeHead(404)\r\n            res.write('Error:File Not Found')\r\n\r\n        }else{\r\n            res.write(data)\r\n        }\r\n        res.end()\r\n    })\r\n\r\n})\r\n\r\nserver.listen(port,function(error){ \r\n    if(error){\r\n        console.log('something went wrong',error)\r\n    }else{\r\n        console.log('server is listening on port'+port)\r\n    }\r\n}\r\n)"]}